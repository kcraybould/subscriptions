package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kcraybould/subscriptions/models"
)

/*UnsubscribeNoContent Success.

swagger:response unsubscribeNoContent
*/
type UnsubscribeNoContent struct {
}

// NewUnsubscribeNoContent creates UnsubscribeNoContent with default headers values
func NewUnsubscribeNoContent() *UnsubscribeNoContent {
	return &UnsubscribeNoContent{}
}

// WriteResponse to the client
func (o *UnsubscribeNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

/*UnsubscribeBadRequest Bad Request

swagger:response unsubscribeBadRequest
*/
type UnsubscribeBadRequest struct {

	// In: body
	Payload *models.ErrorDetail `json:"body,omitempty"`
}

// NewUnsubscribeBadRequest creates UnsubscribeBadRequest with default headers values
func NewUnsubscribeBadRequest() *UnsubscribeBadRequest {
	return &UnsubscribeBadRequest{}
}

// WithPayload adds the payload to the unsubscribe bad request response
func (o *UnsubscribeBadRequest) WithPayload(payload *models.ErrorDetail) *UnsubscribeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe bad request response
func (o *UnsubscribeBadRequest) SetPayload(payload *models.ErrorDetail) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UnsubscribeConflict Resource already exists

swagger:response unsubscribeConflict
*/
type UnsubscribeConflict struct {
}

// NewUnsubscribeConflict creates UnsubscribeConflict with default headers values
func NewUnsubscribeConflict() *UnsubscribeConflict {
	return &UnsubscribeConflict{}
}

// WriteResponse to the client
func (o *UnsubscribeConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
}
