package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kcraybould/subscriptions/models"
)

/*PostSubscriptionsCreated Created.

swagger:response postSubscriptionsCreated
*/
type PostSubscriptionsCreated struct {
	/*Returned on successful creation of a new resource. A link to the newly-created resouce will be contained in the 'Location' header.
	  Required: true
	*/
	Location string `json:"Location"`
}

// NewPostSubscriptionsCreated creates PostSubscriptionsCreated with default headers values
func NewPostSubscriptionsCreated() *PostSubscriptionsCreated {
	return &PostSubscriptionsCreated{}
}

// WithLocation adds the location to the post subscriptions created response
func (o *PostSubscriptionsCreated) WithLocation(location string) *PostSubscriptionsCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the post subscriptions created response
func (o *PostSubscriptionsCreated) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *PostSubscriptionsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location
	rw.Header().Add("Location", fmt.Sprintf("%v", o.Location))

	rw.WriteHeader(201)
}

/*PostSubscriptionsBadRequest Bad Request

swagger:response postSubscriptionsBadRequest
*/
type PostSubscriptionsBadRequest struct {

	// In: body
	Payload *models.ErrorDetail `json:"body,omitempty"`
}

// NewPostSubscriptionsBadRequest creates PostSubscriptionsBadRequest with default headers values
func NewPostSubscriptionsBadRequest() *PostSubscriptionsBadRequest {
	return &PostSubscriptionsBadRequest{}
}

// WithPayload adds the payload to the post subscriptions bad request response
func (o *PostSubscriptionsBadRequest) WithPayload(payload *models.ErrorDetail) *PostSubscriptionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post subscriptions bad request response
func (o *PostSubscriptionsBadRequest) SetPayload(payload *models.ErrorDetail) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSubscriptionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostSubscriptionsConflict Resource already exists

swagger:response postSubscriptionsConflict
*/
type PostSubscriptionsConflict struct {
}

// NewPostSubscriptionsConflict creates PostSubscriptionsConflict with default headers values
func NewPostSubscriptionsConflict() *PostSubscriptionsConflict {
	return &PostSubscriptionsConflict{}
}

// WriteResponse to the client
func (o *PostSubscriptionsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
}
